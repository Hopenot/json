 Создать внешний репозиторий c названием JSON.        
 
 Клонировать репозиторий JSON на локальный компьютер.
 заходим в папку, где будет храниться проект и делаем git clone
 
 Внутри локального JSON создать файл “new.json”.
 touch new.json
 
 Добавить файл под гит.
 git add new.json
 
 Закоммитить файл.
 git commit -m "message"
 
 Отправить файл на внешний GitHub репозиторий.
 git push
 
 Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json
 
 Отправить изменения на внешний репозиторий.
 git add new.json
 git commit -m "message"
 git push
 
 Создать файл preferences.json
 touch preferences.json
 
 В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 vim preferences.json
 
 Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 touch skills.json
 
 Отправить сразу 2 файла на внешний репозиторий.
 git add preferences.json skills.json
 git commit -m "message"
 git push
 
 На веб интерфейсе создать файл bug_report.json.
 зеленая кнопка add new file
 
 Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 внести изменения и снизу нажать на кнопку
 
 На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 модифаем
 
 Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 кнопка внизу
 
 Синхронизировать внешний и локальный репозиторий JSON
 git pull
